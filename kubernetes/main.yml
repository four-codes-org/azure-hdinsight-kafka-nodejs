---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer
  labels:
    kafka: consumer
spec:
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 1
  minReadySeconds: 10
  selector:
    matchLabels:
      app: consumer
  template:
    metadata:
      name: kafka-consumer
      labels:
        app: consumer
    spec:
      hostNetwork: true
      containers:
        - name: consumer
          image: jjino/azure-hdinsight-kafka:2834368477
          imagePullPolicy: Always
          ports:
            - containerPort: 9000
          env:
          - name: DATABASE_URL
            value: "mongodb-connection-string-with-db"
          - name: LIST_OF_KAFKA_HOST
            value: "10.42.60.199:9092,10.42.60.203:9092,10.42.60.200:9092"
          - name: LIST_KAFKA_TOPICS
            value: "CBPR_Validator_Ingress,MX2MT_Transformer_Ingress,MT_Builder_Ingress,Error,MX_Response_Builder_Ingress,MT2MX_Transformer_Ingress,MX_Validator_Ingress,MT_Validator_Ingress,MT_Response_Builder_Ingress,MT_Ingestor_Ingress,ISOConvertor_Response,MX_Builder_Ingress,ISOConvertor_MT2MX_Response,Error_Mx2Mt,Error_Mt2Mx,consolidator_topic"
---
apiVersion: v1
kind: Service
metadata:
  name: consumer
  labels:
    kafka: consumer
spec:
  type: ClusterIP
  selector:
    app: consumer
  ports:
    - port: 80
      targetPort: 9000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kafka-service
spec:
  ingressClassName: nginx
  rules:
    - host: fourtimes.ml
      http:
        paths:
          - backend:
              service:
                name: consumer
                port:
                  number: 80
            path: /kafka
            pathType: Prefix
